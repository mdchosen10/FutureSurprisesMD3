import holidays_2023 from "@/helpers/holidays/holidays_2023.json";
import holidays_2024 from "@/helpers/holidays/holidays_2024.json";
import holidays_2025 from "@/helpers/holidays/holidays_2025.json";

export const APIDateFormat = "YYYY-MM-DD";

export const faqs = [
  {
    title: "What is future surprises ?",
    description:
      "Future Surprises is an automated gift-giving service that takes the stress out of finding the perfect gift. We curate and deliver thoughtful gifts based on the information you provide, complete with a personalized message generated by AI. All you need to do is create an account and set your preferences!",
  },
  {
    title: "How does Future Surprises work?",
    description:
      "Simply create an account, enter the recipient's details and select a default spending amount. From there, we'll take care of everything, including gift selection, packaging, and delivery, as well as sending you reminders for special occasions.",
  },
  {
    title: "How much does Future Surprises cost?",
    description:
      "Future Surprises is free to use, we only charge a nominal 5 dollar transaction fee for each transaction. There is no subscription fee or recurring charges.",
  },
  {
    title: "How do I place an order?",
    description:
      "You can place an order by creating an account on our website and following the prompts to enter your recipient's information and set your preferences.",
  },
  {
    title: "Can I choose the gift myself?",
    description:
      "The Future Surprises experience is designed to be fully automated; however, we do take into consideration any preferences or restrictions you provide.",
  },
  {
    title: "How long does delivery take?",
    description:
      "Delivery times may vary depending on location and availability, but we strive to deliver all gifts in a timely manner. If the first time you add a recipient and include a holiday that is less than two weeks away there is a chance that the gift maybe delayed. However, all future gifts will arrive on time.",
  },
  {
    title: "Do you offer international delivery?",
    description:
      "At this time, we only deliver within the United States.",
  },
  {
    title: "What payment methods do you accept?",
    description: "We accept all major credit cards.",
  },
  {
    title: "Is my payment information secure?",
    description:
      "Absolutely, we use secure encryption methods to protect all your payment information.Refunds, Returns, and Exchanges",
  },
  {
    title: "What if the recipient doesn't like the gift?",
    description:
      "We do everything we can to ensure each gift is thoughtful and brings delight to the recipient. If, however, we get it wrong please contact us and we will do our absolute best to make it right for you and the recipient.",
  },
  {
    title: "Do you offer refunds/returns/exchanges?",
    description:
      "As a general rule, we don't provide refunds once the order is processed. However, if there is an issue, our customer support team will do our best to make it right.",
  },
  {
    title: "How do I contact customer support?",
    description:
      "You can reach out to us via the 'Contact Us' section on our website, or directly via email at info@futuresurprises.com.",
  },
  {
    title: "What are your customer support hours?",
    description:
      "Our customer support is available Monday to Friday, from 9:00 am to 5:00 pm CST.",
  },
  {
    title: "Can I send gifts to multiple people?",
    description:
      "Yes, you can add multiple recipients within your account and set individual preferences for each.",
  },
  {
    title:
      "Do you offer corporate or bulk gifting options?",
    description:
      "Yes, please contact our sales team for more information on corporate and bulk gifting options.",
  },
];

export const additionalInformation = [
  { name: "Tech & Gadget Lover" },
  {
    name: "Fashion & Beauty Enthusiasts (Covers grooming, apparel, and accessories)",
  },
  {
    name: "Food & Drink Aficionado (Incorporates grilling, cooking, and beverages)",
  },
  {
    name: "Fitness & Wellness Buff (Includes yoga, gym, and wellness)",
  },
  {
    name: "Arts & Entertainment Fan (Covers art, music, movies, and books)",
  },
  { name: "Travel & Adventure Seeker" },
  {
    name: "Eco-Conscious & Home Lifestyle (Includes eco-friendly products and home decor)",
  },
];

export const checkboxes = [
  {
    name: "$30 (For kids under 10)",
    value: "30-for-kids-under-10",
    type: "price",
  },
  {
    name: "$40",
    value: "40",
    type: "price",
  },
  {
    name: "$60",
    value: "60",
    type: "price",
  },
  {
    name: "$100",
    value: "100",
    type: "price",
  },
  {
    name: "Gifts for him",
    value: "gifts-for-him",
    type: "category",
  },
  {
    name: "Gifts for her",
    value: "gifts-for-her",
    type: "category",
  },
  {
    name: "Gifts for kids",
    value: "gifts-for-kids",
    type: "category",
  },
];

export const categoryList = [
  {
    name: "$40 Collection",
    value: "40",
    type: "price",
    img: "https://res.cloudinary.com/futuresurprisesimages/image/upload/v1695480461/Neutral/under%2040/corporate_gift_set_v6qk3h.png",
  },
  {
    name: "$60 Collection",
    value: "60",
    type: "price",
    img: "https://res.cloudinary.com/futuresurprisesimages/image/upload/v1695490276/Neutral/under%2040/sleep_headphones_fadf5r.png",
  },
  {
    name: "$100 Collection",
    value: "100",
    type: "price",
    img: "https://res.cloudinary.com/futuresurprisesimages/image/upload/v1695480464/Neutral/under%2040/wooden_phone_docking_station_m0bm9y.png",
  },
  {
    name: "Gifts for him",
    value: "gifts-for-him",
    type: "category",
    img: "https://res.cloudinary.com/futuresurprisesimages/image/upload/v1695490587/Neutral/under%20100/Knife_Set_dpmbuj.png",
  },
  {
    name: "Gifts for her",
    value: "gifts-for-her",
    type: "category",
    img: "https://res.cloudinary.com/futuresurprisesimages/image/upload/v1695490261/Neutral/under%2040/Leather_journal_lilfzx.png",
  },
  {
    name: "Gifts for kids",
    value: "gifts-for-kids",
    type: "category",
    img: "https://res.cloudinary.com/futuresurprisesimages/image/upload/v1695490244/Neutral/under%2040/journal_gift_box_with_pen_ut5h78.png",
  },
];

export const relationshipOptions = [
  { name: "Spouse / Partner", value: "Spouse / Partner" },
  {
    name: "Girlfriend / Boyfriend",
    value: "Girlfriend / Boyfriend",
  },
  { name: "Fiancé / Fiancée", value: "Fiancé / Fiancée" },
  { name: "Parent", value: "Parent" },
  { name: "Child", value: "Child" },
  { name: "Sibling", value: "Sibling" },
  { name: "Grandparent", value: "Grandparent" },
  { name: "Grandchild", value: "Grandchild" },
  { name: "Aunt / Uncle", value: "Aunt / Uncle" },
  { name: "Niece / Nephew", value: "Niece / Nephew" },
  { name: "Cousin", value: "Cousin" },
  { name: "Step-Parent", value: "Step-Parent" },
  { name: "Step-Child", value: "Step-Child" },
  { name: "Step-Sibling", value: "Step-Sibling" },
  { name: "Close Friend", value: "Close Friend" },
  { name: "Coworker", value: "Coworker" },
  { name: "Boss / Manager", value: "Boss / Manager" },
  { name: "Employee", value: "Employee" },
  { name: "Neighbor", value: "Neighbor" },
  { name: "Teacher", value: "Teacher" },
  { name: "Student", value: "Student" },
  { name: "Mentor / Mentee", value: "Mentor / Mentee" },
  { name: "Client", value: "Client" },
  { name: "Business Partner", value: "Business Partner" },
  { name: "Godparent", value: "Godparent" },
  { name: "Godchild", value: "Godchild" },
  { name: "Teammate", value: "Teammate" },
  {
    name: "Club / Organization Member",
    value: "Club / Organization Member",
  },
  {
    name: "Service Provider (e.g., Hairdresser, Personal Trainer)",
    value: "Service Provider",
  },
  { name: "Other", value: "Other" },
];

export const yearlyHolidays = () => {
  // - the user will be presented a bunch of checkboxes; the values of the checkboxes
  //   are populated with the value of the holiday option which comprises a string
  //   comprising the name of the holiday, a comma, and the date of the holiday

  // - if the holiday occurs within the giftDateBuffer, then the next year's holiday
  //   will be used to populate that holiday option
  // let giftDateBufferInDays = 14; // -units: days
  let giftDateBufferInMs = 24 * 60 * 60 * 1000;

  let allCurrentAndFutureHolidays = [
    ...holidays_2023,
    ...holidays_2024,
    ...holidays_2025,
  ];

  // - we'll use the current date as the reference
  let todaysDateInMs = Date.now();

  // - the earliest date for which we can deliver a present (the day after the last buffer day)
  let holidayOptionsStartDate = new Date(
    todaysDateInMs + giftDateBufferInMs + 86400 * 1000,
  );

  // - we round to the beginning of the day of the earliest start date;
  let holidayOptionsStartDateRounded = new Date(
    holidayOptionsStartDate.getFullYear() +
      "-" +
      (holidayOptionsStartDate.getMonth() + 1) +
      "-" +
      holidayOptionsStartDate.getDate(),
  );

  // - now let me build the array and object with all the holiday options that will be presented to the user
  // now that we have the official start date of the holiday options
  let allHolidayOptionsObject: any = {};
  for (
    let i = 0;
    i < allCurrentAndFutureHolidays.length;
    i++
  ) {
    const holiday: any = allCurrentAndFutureHolidays[i];
    // if the holiday date is within 2 weeks of today, skip
    if (
      new Date(holiday.date) <
      holidayOptionsStartDateRounded
    ) {
      continue;
    }

    const formatHolidayKey = holiday.name?.replace(
      /[ ,'-./]/g,
      "",
    );

    // else, if not in the object, add it to the allHolidayOptionsObject
    if (!allHolidayOptionsObject[formatHolidayKey]) {
      allHolidayOptionsObject[formatHolidayKey] = {
        name: holiday.name,
        date: holiday.date,
        type: holiday.type,
      };
    }
  }

  // - and now I build an array of all the holiday options with each holiday option
  // stored as an object with the keys of name, date, and type

  let allHolidayOptionsArray = Object.entries(
    allHolidayOptionsObject,
  ).map((holidayNameAndDate: any) => {
    let holidayObject: {
      name: string;
      date: string;
      type: string;
    } = { name: "", date: "", type: "" };
    holidayObject["name"] = holidayNameAndDate[1].name;
    holidayObject["date"] = holidayNameAndDate[1].date;
    holidayObject["type"] = holidayNameAndDate[1].type;
    return holidayObject;
  });

  return allHolidayOptionsArray;
};

export const sysPhone = (phone: any) => {
  const cleaned = ("" + phone).replace(/\D/g, "");
  // 576-456-7890
  const match = cleaned.match(/^(\d{3})(\d{3})(\d{4})$/);
  if (match) {
    return `(${match[1]})-${match[2]}-${match[3]}`;
  }
  return phone;
};
